### 1. GET /products (200)
GET  http://localhost:3000/products HTTP/1.1

### 1. GET /products con query params <category>: <title> EXISTENTE
GET  http://localhost:3000/products?category=Indie&title=Bloom HTTP/1.1

### 1. GET /products con query params <category>: <title> INEXISTENTE
GET  http://localhost:3000/products?category=Indie&title=No+existo HTTP/1.1


### 1. GET /products con query params <category>: EXISTENTE
GET  http://localhost:3000/products?category=Videogames HTTP/1.1
### 1. GET /products con query params <category>: INEXISTENTE 
GET  http://localhost:3000/products?category=123ABC456 HTTP/1.1


### 1. GET /products con query params <title> EXISTENTE
GET  http://localhost:3000/products?title=Igor HTTP/1.1
### 1. GET /products con query params <title> INEXISTENTE
GET  http://localhost:3000/products?title=ABCD1234 HTTP/1.1



### ----------- PRUEBAS PARA PAGINATOR ---------------
GET  http://localhost:3000/products?page=1 HTTP/1.1

### 
GET  http://localhost:3000/products?page=2 HTTP/1.1

###
GET  http://localhost:3000/products?page=7 HTTP/1.1





### 2. GET /products/:id (404) --> Con id inválido
GET http://localhost:3000/products/123 HTTP/1.1

### 2. GET /products/:id (200) --> Con id válido 
GET http://localhost:3000/products/7b1b3842-7707-40e2-9f70-14373be61581 HTTP/1.1



### 3. POST products/cart  (400) --> Cuando no es un arreglo
POST http://localhost:3000/products/cart HTTP/1.1
content-type: application/json

{
    "uuid": "sample",
    "amount": 3 
}

### 3. POST products/cart (404) --> Cuando se envía un arreglo cuyo uuid no existe
POST http://localhost:3000/products/cart HTTP/1.1
content-type: application/json

[
    {
        "uuid" : "7b1b3842-7707-40e2-9f70-14373be61581",
        "amount": 2
    },
    {
        "uuid": "0000-este-uuid-no-existe",
        "amount": 3 
    }
]


### 3. POST products/cart (200) --> Con todos los uuids existentes
POST http://localhost:3000/products/cart HTTP/1.1
content-type: application/json

[
    {
        "uuid": "f35fc1d5-8e91-4508-895d-01e597bbaeb1",
        "amount": 5
    },
    {
        "uuid": "0e56585c-5352-4721-8f7b-6ff7cd30ddd6",
        "amount": 3
    },
    {
        "uuid" : "7b1b3842-7707-40e2-9f70-14373be61581",
        "amount": 2
    }
]


### 4. admin/products (400) --> Sin el header e x-auth
POST http://localhost:3000/admin/products HTTP/1.1
content-type: application/json

{
    "uuid": "aabbccddff-0000-1111-aaaa-bbbbbbb00000",
    "title": "Mi producto",
    "description": "Producto de prueba",
    "imageUrl": "https://upload.wikimedia.org/wikipedia/en/b/b8/The_Chemical_Brothers_-_Surrender_album_cover.png",
    "unit": "Vinyl",
    "stock": 100,
    "pricePerUnit": 555.55,
    "category": "Electronic"
}



### 4. admin/products (404) --> Con header pero contraseña incorrecta 
POST http://localhost:3000/admin/products HTTP/1.1
content-type: application/json
x-auth: 'EstaContraseñaEsIncorrecta1234'

{
    "uuid": "aabbccddff-0000-1111-aaaa-bbbbbbb00000",
    "title": "Mi producto",
    "description": "Producto de prueba",
    "imageUrl": "https://upload.wikimedia.org/wikipedia/en/b/b8/The_Chemical_Brothers_-_Surrender_album_cover.png",
    "unit": "Vinyl",
    "stock": 100,
    "pricePerUnit": 555.55,
    "category": "Electronic"
}
### 4. admin/products (201) --> Con atributos incompletos 
POST http://localhost:3000/admin/products HTTP/1.1
content-type: application/json
x-auth: admin 

{
    "uuid": "aabbccddff-0000-1111-aaaa-bbbbbbb00000",
    "title": "Mi producto",
    "category": "Electronic"
}

### 4. admin/products (201) --> Con x-auth correcto 
POST http://localhost:3000/admin/products HTTP/1.1
content-type: application/json
x-auth: admin 

{
    "uuid": "aabbccddff-0000-1111-aaaa-bbbbbbb00000",
    "title": "Mi nuevo producto",
    "description": "Producto de prueba",
    "imageUrl": "https://upload.wikimedia.org/wikipedia/en/b/b8/The_Chemical_Brothers_-_Surrender_album_cover.png",
    "unit": "Vinyl",
    "stock": 100,
    "pricePerUnit": 555.55,
    "category": "Electronic"
}


### 5.  admin/products/id Actualizar producto --> Cuando uuid no existe
PUT http://localhost:3000/admin/products/b6de571f-1111111-hhhh-ooo-lll-aaa HTTP/1.1
content-type: application/json
x-auth: admin 

{ 
    "title": "Mi producto ACTUALIZADO",
    "description": "Producto de prueba",
    "imageUrl": "https://upload.wikimedia.org/wikipedia/en/b/b8/The_Chemical_Brothers_-_Surrender_album_cover.png",
    "unit": "Vinyl",
    "stock": 100,
    "pricePerUnit": 555.55,
    "category": "Electronic"
}

### 5  admin/products/id PUT producto --> Con atributos incompletos
PUT http://localhost:3000/admin/products/aabbccddff-0000-1111-aaaa-bbbbbbb00000 HTTP/1.1
content-type: application/json
x-auth: admin 

{
    "title": "Mi producto ACTUALIZADO",
    "imageUrl": "https://upload.wikimedia.org/wikipedia/en/b/b8/The_Chemical_Brothers_-_Surrender_album_cover.png",
    "stock": 100
}

### 5  admin/products/id PUT producto --> Con uuid correcto 
PUT http://localhost:3000/admin/products/aabbccddff-0000-1111-aaaa-bbbbbbb00000 HTTP/1.1
content-type: application/json
x-auth: admin 

{
    "title": "Mi producto ACTUALIZADO",
    "description": "Producto de prueba",
    "imageUrl": "https://upload.wikimedia.org/wikipedia/en/b/b8/The_Chemical_Brothers_-_Surrender_album_cover.png",
    "unit": "Vinyl",
    "stock": 100,
    "pricePerUnit": 555.55,
    "category": "EDM"
}

### 6  admin/products/id DELETE producto --> Con uuid incorrecto
DELETE http://localhost:3000/admin/products/uuid-incorrecto-testing-purposes HTTP/1.1
content-type: application/json
x-auth: admin 

### 6  admin/products/id DELETE producto --> Con uuid correcto
DELETE http://localhost:3000/admin/products/aabbccddff-0000-1111-aaaa-bbbbbbb00000 HTTP/1.1
content-type: application/json
x-auth: admin 